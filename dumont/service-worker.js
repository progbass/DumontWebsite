"use strict";var precacheConfig=[["./index.html","7482c489e49e9fb46960caf3d27cc273"],["./static/css/main.f13f0a4f.css","c05e5f5c48950ae52537478581e7e0db"],["./static/js/main.ad4ceb3e.js","418518ccc4183d20b5165cec7e7f5ee1"],["./static/media/aboutus-bg.99b918a2.jpg","99b918a2f91ce8cacb9394ebccac3bbe"],["./static/media/aboutus-bg2.b660a81a.jpg","b660a81a3cd0d4f8816b8d5f4eb2af7d"],["./static/media/aboutus-header-mobile.452ca0dd.svg","452ca0dd1a70cf031f5fa16c52c670e1"],["./static/media/aboutus-header.a52958b4.svg","a52958b47d0bffa75eae067d5e54191b"],["./static/media/footer-bg.43d7c438.svg","43d7c438fcce52c525d5e824ebd170a5"],["./static/media/icon-arrow--black.25f55aa3.svg","25f55aa368ffb752d07cb1b1629480d2"],["./static/media/icon-arrow--blackClose.1cc2be7a.svg","1cc2be7a1c64609ef36481e6a850c75d"],["./static/media/icon-arrow--close.3f04cddf.svg","3f04cddff3573e0e7c5d7888df5f13bd"],["./static/media/icon-arrow.63438a64.svg","63438a64a930f1cabe6d020e5d65725b"],["./static/media/icon-card.a5c0985f.svg","a5c0985fb7af08aa4c632d60bc3ca0e3"],["./static/media/icon-close.561ca2ad.svg","561ca2adb5e0616d7920c8737929eb0f"],["./static/media/icon-linkedin.9baf952c.svg","9baf952cce777cf46a1487d2e8946d19"],["./static/media/icon-pdf.4ade5be2.svg","4ade5be2971fa92294199a45674803a6"],["./static/media/icon-print.1e4b977d.svg","1e4b977d9568a4dd4ebe2adc2d9b87b0"],["./static/media/icon-search.f5dd6f24.svg","f5dd6f24587ba595dcbb8035ec6a2215"],["./static/media/ourteam-bg.7dc89783.jpg","7dc8978381bce0e403b3c96ceaed00ba"],["./static/media/resources-bg.81f1acae.jpg","81f1acae8068eb86c80ab74a8392cdd4"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),n=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,c),e=urlsToCacheKeys.has(t));var n="./index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});